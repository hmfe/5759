{"ast":null,"code":"var _jsxFileName = \"/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/inputForm.js\";\nimport React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\n\nclass InputForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.getSearch = event => {\n      event.preventDefault();\n      const query = this.state.query;\n      this.storeQuery(this.state.query);\n      fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(process.env.App_ID, \" &app_key=\").concat(process.env.APP_KEY)).then(response => response.json()).then(data => this.setState({\n        recipeResult: data.hits,\n        query: \"\",\n        title: this.getQuery()\n      }));\n    };\n\n    this.state = {\n      query: \"\",\n      recipeResult: [],\n      title: {\n        query: \"\",\n        date: \"\"\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /*\n  getHistory() {\n    const data = localStorage.getItem(\"HistoryQuery\");\n    const { query } = this.state;\n     this.setState({\n      query: data\n    });\n    console.log(query);\n  }\n  */\n  storeQuery(history) {\n    localStorage.setItem(\"history\", history);\n    localStorage.setItem(\"dateHistory\", Date.now());\n  }\n\n  getQuery() {\n    const history = localStorage.getItem(\"history\");\n    const dateHistory = localStorage.getItem(\"dateHistory\");\n    return {\n      query: history,\n      date: dateHistory\n    };\n  }\n  /*\n  componentDidMount() {\n    this.searchedQuery = localStorage.getItem(\"HistoryQuery\");\n    if (localStorage.getItem(\"HistoryQuery\")) {\n      this.setState({\n        title: this.state.title.query\n      });\n    } else {\n      this.setState({\n        title: \"\"\n      });\n    }\n  }\n  componentWillUpdate(nextProps, nextState) {\n    //const { title } = this.state.title.query;\n    if (this.state.title !== nextState.title) {\n      const { title } = this.state;\n      const dateTime = Date.now();\n      localStorage.setItem(\"HistoryQuery\", title.query);\n      localStorage.setItem(\"HistoryDate\", dateTime);\n    }\n  }\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.getSearch,\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"query\",\n      value: this.state.query,\n      placeholder: \"Search ...\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.state.recipeResult.map(item => React.createElement(Recipe, {\n      key: item.recipe.uri,\n      title: item.recipe.label,\n      calories: item.recipe.calories,\n      image: item.recipe.image,\n      ingredients: item.recipe.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/inputForm.js"],"names":["React","Component","Recipe","InputForm","constructor","onChange","event","setState","target","name","value","getSearch","preventDefault","query","state","storeQuery","fetch","process","env","App_ID","APP_KEY","then","response","json","data","recipeResult","hits","title","getQuery","date","bind","history","localStorage","setItem","Date","now","getItem","dateHistory","render","map","item","recipe","uri","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\n\nclass InputForm extends Component {\n  searchedQuery;\n  constructor() {\n    super();\n\n    this.state = {\n      query: \"\",\n      recipeResult: [],\n      title: {\n        query: \"\",\n        date: \"\"\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  getSearch = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    this.storeQuery(this.state.query);\n    fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${process.env.App_ID} &app_key=${process.env.APP_KEY}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          recipeResult: data.hits,\n          query: \"\",\n          title: this.getQuery()\n        })\n      );\n  };\n  /*\n  getHistory() {\n    const data = localStorage.getItem(\"HistoryQuery\");\n    const { query } = this.state;\n\n    this.setState({\n      query: data\n    });\n    console.log(query);\n  }\n*/\n  storeQuery(history) {\n    localStorage.setItem(\"history\", history);\n    localStorage.setItem(\"dateHistory\", Date.now());\n  }\n  getQuery() {\n    const history = localStorage.getItem(\"history\");\n    const dateHistory = localStorage.getItem(\"dateHistory\");\n    return { query: history, date: dateHistory };\n  }\n  /*\n  componentDidMount() {\n    this.searchedQuery = localStorage.getItem(\"HistoryQuery\");\n    if (localStorage.getItem(\"HistoryQuery\")) {\n      this.setState({\n        title: this.state.title.query\n      });\n    } else {\n      this.setState({\n        title: \"\"\n      });\n    }\n  }\n  componentWillUpdate(nextProps, nextState) {\n    //const { title } = this.state.title.query;\n    if (this.state.title !== nextState.title) {\n      const { title } = this.state;\n      const dateTime = Date.now();\n      localStorage.setItem(\"HistoryQuery\", title.query);\n      localStorage.setItem(\"HistoryDate\", dateTime);\n    }\n  }\n*/\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.getSearch} autoComplete=\"on\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={this.state.query}\n            placeholder=\"Search ...\"\n            onChange={this.onChange}\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <hr></hr>\n        {this.state.recipeResult.map(item => (\n          <Recipe\n            key={item.recipe.uri}\n            title={item.recipe.label}\n            calories={item.recipe.calories}\n            image={item.recipe.image}\n            ingredients={item.recipe.ingredients}\n          />\n        ))}\n      </div>\n    );\n  }\n}\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}