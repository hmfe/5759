{"ast":null,"code":"var _jsxFileName = \"/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/inputForm.js\";\nimport React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\n\nclass InputForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.getSearch = event => {\n      event.preventDefault();\n      const query = this.state.query;\n      const x = this.getQuery();\n      x.push(query);\n      console.log(x); // get data from localStorage\n      // push to data\n      // insert to localStorage\n\n      fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(process.env.App_ID, \" &app_key=\").concat(process.env.APP_KEY)).then(response => response.json()).then(data => this.setState({\n        recipeResult: data.hits,\n        query: \"\",\n        title: this.getQuery()\n      }));\n    };\n\n    this.getQuery = () => {\n      const history = localStorage.getItem(\"history\");\n\n      if (history) {\n        const parsedData = JSON.parse(history);\n        return parsedData;\n      }\n\n      return false;\n    };\n\n    this.state = {\n      query: \"\",\n      recipeResult: [],\n      title: {\n        query: \"\",\n        date: \"\"\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /*\n  getHistory() {\n    const data = localStorage.getItem(\"HistoryQuery\");\n    const { query } = this.state;\n     this.setState({\n      query: data\n    });\n    console.log(query);\n  }\n  */\n  storeQuery(historyArray) {\n    localStorage.setItem(\"history\", JSON.stringify(historyArray));\n  }\n\n  initQuery() {\n    this.storeQuery([]);\n  }\n\n  componentDidMount() {\n    if (!this.getQuery()) {\n      this.initQuery();\n    }\n  }\n  /*\n  componentDidMount() {\n    this.searchedQuery = localStorage.getItem(\"HistoryQuery\");\n    if (localStorage.getItem(\"HistoryQuery\")) {\n      this.setState({\n        title: this.state.title.query\n      });\n    } else {\n      this.setState({\n        title: \"\"\n      });\n    }\n  }\n  componentWillUpdate(nextProps, nextState) {\n    //const { title } = this.state.title.query;\n    if (this.state.title !== nextState.title) {\n      const { title } = this.state;\n      const dateTime = Date.now();\n      localStorage.setItem(\"HistoryQuery\", title.query);\n      localStorage.setItem(\"HistoryDate\", dateTime);\n    }\n  }\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.getSearch,\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"query\",\n      value: this.state.query,\n      placeholder: \"Search ...\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.title.query), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.state.recipeResult.map(item => React.createElement(Recipe, {\n      key: item.recipe.uri,\n      title: item.recipe.label,\n      calories: item.recipe.calories,\n      image: item.recipe.image,\n      ingredients: item.recipe.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/inputForm.js"],"names":["React","Component","Recipe","InputForm","constructor","onChange","event","setState","target","name","value","getSearch","preventDefault","query","state","x","getQuery","push","console","log","fetch","process","env","App_ID","APP_KEY","then","response","json","data","recipeResult","hits","title","history","localStorage","getItem","parsedData","JSON","parse","date","bind","storeQuery","historyArray","setItem","stringify","initQuery","componentDidMount","render","map","item","recipe","uri","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\n\nclass InputForm extends Component {\n  searchedQuery;\n  constructor() {\n    super();\n\n    this.state = {\n      query: \"\",\n      recipeResult: [],\n      title: {\n        query: \"\",\n        date: \"\"\n      }\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  getSearch = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    const x = this.getQuery();\n    x.push(query);\n    console.log(x);\n    // get data from localStorage\n    // push to data\n    // insert to localStorage\n    fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${process.env.App_ID} &app_key=${process.env.APP_KEY}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          recipeResult: data.hits,\n          query: \"\",\n          title: this.getQuery()\n        })\n      );\n  };\n  /*\n  getHistory() {\n    const data = localStorage.getItem(\"HistoryQuery\");\n    const { query } = this.state;\n\n    this.setState({\n      query: data\n    });\n    console.log(query);\n  }\n*/\n\n  storeQuery(historyArray) {\n    localStorage.setItem(\"history\", JSON.stringify(historyArray));\n  }\n  getQuery = () => {\n    const history = localStorage.getItem(\"history\");\n    if (history) {\n      const parsedData = JSON.parse(history);\n      return parsedData;\n    }\n    return false;\n  };\n\n  initQuery() {\n    this.storeQuery([]);\n  }\n\n  componentDidMount() {\n    if (!this.getQuery()) {\n      this.initQuery();\n    }\n  }\n  /*\n  componentDidMount() {\n    this.searchedQuery = localStorage.getItem(\"HistoryQuery\");\n    if (localStorage.getItem(\"HistoryQuery\")) {\n      this.setState({\n        title: this.state.title.query\n      });\n    } else {\n      this.setState({\n        title: \"\"\n      });\n    }\n  }\n  componentWillUpdate(nextProps, nextState) {\n    //const { title } = this.state.title.query;\n    if (this.state.title !== nextState.title) {\n      const { title } = this.state;\n      const dateTime = Date.now();\n      localStorage.setItem(\"HistoryQuery\", title.query);\n      localStorage.setItem(\"HistoryDate\", dateTime);\n    }\n  }\n*/\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.getSearch} autoComplete=\"on\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={this.state.query}\n            placeholder=\"Search ...\"\n            onChange={this.onChange}\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n        <div>{this.state.title.query}</div>\n        <hr></hr>\n        {this.state.recipeResult.map(item => (\n          <Recipe\n            key={item.recipe.uri}\n            title={item.recipe.label}\n            calories={item.recipe.calories}\n            image={item.recipe.image}\n            ingredients={item.recipe.ingredients}\n          />\n        ))}\n      </div>\n    );\n  }\n}\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}