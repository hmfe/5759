{"ast":null,"code":"import _defineProperty from \"/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/Forms/inputForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Recipe from \"../Recipe/Recipe\";\nimport moment from \"moment\";\nimport SearchHistory from \"../SearchHistory/SearchHistory\";\nimport \"./inputForm.css\";\n\nclass InputForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.getSearch = event => {\n      event.preventDefault();\n      const query = this.state.query;\n      const searchedTitle = this.getQuery();\n      searchedTitle.push({\n        title: query,\n        date: Date.now()\n      });\n      console.log(\"what is \", searchedTitle);\n      console.log(\"ddd\", searchedTitle.length);\n      this.storeQuery(searchedTitle);\n      fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(process.env.App_ID, \" &app_key=\").concat(process.env.APP_KEY)).then(response => response.json()).then(data => this.setState({\n        recipeResult: data.hits,\n        query: \"\",\n        title: this.getQuery()\n      }));\n    };\n\n    this.getQuery = () => {\n      const history = localStorage.getItem(\"history\");\n      console.log(hisotry);\n\n      if (history) {\n        const parsedData = JSON.parse(history);\n        return parsedData;\n      }\n\n      return [];\n    };\n\n    this.clearStorage = () => {\n      localStorage.clear();\n      this.setState({\n        query: \"\"\n      });\n    };\n\n    this.clearQuery = date => {\n      const queryHistory = this.getQuery();\n      const filterQuery = queryHistory.filter(item => item.date !== date);\n      this.storeQuery(filterQuery); // Re-render\n\n      this.setState(_objectSpread({}, this.state));\n    };\n\n    this.state = {\n      query: \"\",\n      recipeResult: []\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  storeQuery(historyArray) {\n    localStorage.setItem(\"history\", JSON.stringify(historyArray));\n  }\n\n  initQuery() {\n    this.storeQuery([]);\n  }\n\n  componentDidMount() {\n    if (!this.getQuery()) {\n      this.initQuery();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form--container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.getSearch,\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"query\",\n      value: this.state.query,\n      placeholder: \"Search recipes  ...\",\n      onChange: this.onChange,\n      className: \"input--field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"search--btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"div\", {\n      className: \"search--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search--list--title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Search history\"), React.createElement(\"span\", {\n      className: \"search--list--title--left\",\n      onClick: this.clearStorage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Clear search history\", \" \")), this.getQuery().map(history => React.createElement(SearchHistory, {\n      key: history.date,\n      historyTitle: history.title,\n      historyDate: moment(history.date).format(\"YYYY-DD-MM, h:mm a\"),\n      clearBtn: React.createElement(\"span\", {\n        onClick: () => this.clearQuery(history.date),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" X\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })))), this.state.recipeResult.map(item => React.createElement(Recipe, {\n      key: item.recipe.uri,\n      title: item.recipe.label,\n      calories: item.recipe.calories,\n      image: item.recipe.image,\n      ingredients: item.recipe.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/Forms/inputForm.js"],"names":["React","Component","Recipe","moment","SearchHistory","InputForm","constructor","onChange","event","setState","target","name","value","getSearch","preventDefault","query","state","searchedTitle","getQuery","push","title","date","Date","now","console","log","length","storeQuery","fetch","process","env","App_ID","APP_KEY","then","response","json","data","recipeResult","hits","history","localStorage","getItem","hisotry","parsedData","JSON","parse","clearStorage","clear","clearQuery","queryHistory","filterQuery","filter","item","bind","historyArray","setItem","stringify","initQuery","componentDidMount","render","map","format","recipe","uri","label","calories","image","ingredients"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAO,iBAAP;;AACA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,QATc,GASHC,KAAK,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AACD,KAXa;;AAAA,SAkBdC,SAlBc,GAkBFL,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACM,cAAN;AADmB,YAEXC,KAFW,GAED,KAAKC,KAFJ,CAEXD,KAFW;AAGnB,YAAME,aAAa,GAAG,KAAKC,QAAL,EAAtB;AACAD,MAAAA,aAAa,CAACE,IAAd,CAAmB;AAAEC,QAAAA,KAAK,EAAEL,KAAT;AAAgBM,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAAtB,OAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,aAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBR,aAAa,CAACS,MAAjC;AACA,WAAKC,UAAL,CAAgBV,aAAhB;AAEAW,MAAAA,KAAK,2CACgCb,KADhC,qBACgDc,OAAO,CAACC,GAAR,CAAYC,MAD5D,uBAC+EF,OAAO,CAACC,GAAR,CAAYE,OAD3F,EAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IACR,KAAK3B,QAAL,CAAc;AACZ4B,QAAAA,YAAY,EAAED,IAAI,CAACE,IADP;AAEZvB,QAAAA,KAAK,EAAE,EAFK;AAGZK,QAAAA,KAAK,EAAE,KAAKF,QAAL;AAHK,OAAd,CALJ;AAWD,KAtCa;;AAAA,SA0CdA,QA1Cc,GA0CH,MAAM;AACf,YAAMqB,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;;AACA,UAAIH,OAAJ,EAAa;AACX,cAAMI,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAnB;AACA,eAAOI,UAAP;AACD;;AACD,aAAO,EAAP;AACD,KAlDa;;AAAA,SA8DdG,YA9Dc,GA8DC,MAAM;AACnBN,MAAAA,YAAY,CAACO,KAAb;AACA,WAAKtC,QAAL,CAAc;AACZM,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KAnEa;;AAAA,SAoEdiC,UApEc,GAoED3B,IAAI,IAAI;AACnB,YAAM4B,YAAY,GAAG,KAAK/B,QAAL,EAArB;AACA,YAAMgC,WAAW,GAAGD,YAAY,CAACE,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAAC/B,IAAL,KAAcA,IAA1C,CAApB;AACA,WAAKM,UAAL,CAAgBuB,WAAhB,EAHmB,CAInB;;AACA,WAAKzC,QAAL,mBAAmB,KAAKO,KAAxB;AACD,KA1Ea;;AAGZ,SAAKA,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXsB,MAAAA,YAAY,EAAE;AAFH,KAAb;AAIA,SAAK9B,QAAL,GAAgB,KAAKA,QAAL,CAAc8C,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AA+BD1B,EAAAA,UAAU,CAAC2B,YAAD,EAAe;AACvBd,IAAAA,YAAY,CAACe,OAAb,CAAqB,SAArB,EAAgCX,IAAI,CAACY,SAAL,CAAeF,YAAf,CAAhC;AACD;;AAWDG,EAAAA,SAAS,GAAG;AACV,SAAK9B,UAAL,CAAgB,EAAhB;AACD;;AAED+B,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKxC,QAAL,EAAL,EAAsB;AACpB,WAAKuC,SAAL;AACD;AACF;;AAeDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAK9C,SAArB;AAAgC,MAAA,YAAY,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWD,KAHpB;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,QAAQ,EAAE,KAAKR,QALjB;AAME,MAAA,SAAS,EAAC,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF,EAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,OAAO,EAAE,KAAKuC,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAIuB,GAJvB,CAFF,CADF,EAUG,KAAK5B,QAAL,GAAgB0C,GAAhB,CAAoBrB,OAAO,IAC1B,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAAClB,IADf;AAEE,MAAA,YAAY,EAAEkB,OAAO,CAACnB,KAFxB;AAGE,MAAA,WAAW,EAAEjB,MAAM,CAACoC,OAAO,CAAClB,IAAT,CAAN,CAAqBwC,MAArB,CAA4B,oBAA5B,CAHf;AAIE,MAAA,QAAQ,EACN;AAAM,QAAA,OAAO,EAAE,MAAM,KAAKb,UAAL,CAAgBT,OAAO,CAAClB,IAAxB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAVH,CAdF,CADF,EAqCG,KAAKL,KAAL,CAAWqB,YAAX,CAAwBuB,GAAxB,CAA4BR,IAAI,IAC/B,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACU,MAAL,CAAYC,GADnB;AAEE,MAAA,KAAK,EAAEX,IAAI,CAACU,MAAL,CAAYE,KAFrB;AAGE,MAAA,QAAQ,EAAEZ,IAAI,CAACU,MAAL,CAAYG,QAHxB;AAIE,MAAA,KAAK,EAAEb,IAAI,CAACU,MAAL,CAAYI,KAJrB;AAKE,MAAA,WAAW,EAAEd,IAAI,CAACU,MAAL,CAAYK,WAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CArCH,CADF;AAiDD;;AA9H+B;;AAgIlC,eAAe9D,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Recipe from \"../Recipe/Recipe\";\nimport moment from \"moment\";\nimport SearchHistory from \"../SearchHistory/SearchHistory\";\nimport \"./inputForm.css\";\nclass InputForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: \"\",\n      recipeResult: []\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n   *\n   * get data from localStorage\n   * push to data\n   * insert to localStorage\n   */\n  getSearch = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    const searchedTitle = this.getQuery();\n    searchedTitle.push({ title: query, date: Date.now() });\n    console.log(\"what is \", searchedTitle);\n    console.log(\"ddd\", searchedTitle.length);\n    this.storeQuery(searchedTitle);\n\n    fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${process.env.App_ID} &app_key=${process.env.APP_KEY}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          recipeResult: data.hits,\n          query: \"\",\n          title: this.getQuery()\n        })\n      );\n  };\n  storeQuery(historyArray) {\n    localStorage.setItem(\"history\", JSON.stringify(historyArray));\n  }\n  getQuery = () => {\n    const history = localStorage.getItem(\"history\");\n    console.log(hisotry);\n    if (history) {\n      const parsedData = JSON.parse(history);\n      return parsedData;\n    }\n    return [];\n  };\n\n  initQuery() {\n    this.storeQuery([]);\n  }\n\n  componentDidMount() {\n    if (!this.getQuery()) {\n      this.initQuery();\n    }\n  }\n\n  clearStorage = () => {\n    localStorage.clear();\n    this.setState({\n      query: \"\"\n    });\n  };\n  clearQuery = date => {\n    const queryHistory = this.getQuery();\n    const filterQuery = queryHistory.filter(item => item.date !== date);\n    this.storeQuery(filterQuery);\n    // Re-render\n    this.setState({ ...this.state });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"form--container\">\n          <form onSubmit={this.getSearch} autoComplete=\"on\">\n            <input\n              type=\"text\"\n              name=\"query\"\n              value={this.state.query}\n              placeholder=\"Search recipes  ...\"\n              onChange={this.onChange}\n              className=\"input--field\"\n            ></input>\n            <button className=\"search--btn\" type=\"submit\">\n              Search\n            </button>\n          </form>\n          <div className=\"search--list\">\n            <div className=\"search--list--title\">\n              <span>Search history</span>\n              <span\n                className=\"search--list--title--left\"\n                onClick={this.clearStorage}\n              >\n                Clear search history{\" \"}\n              </span>\n            </div>\n            {this.getQuery().map(history => (\n              <SearchHistory\n                key={history.date}\n                historyTitle={history.title}\n                historyDate={moment(history.date).format(\"YYYY-DD-MM, h:mm a\")}\n                clearBtn={\n                  <span onClick={() => this.clearQuery(history.date)}> X</span>\n                }\n              />\n            ))}\n          </div>\n        </div>\n        {this.state.recipeResult.map(item => (\n          <Recipe\n            key={item.recipe.uri}\n            title={item.recipe.label}\n            calories={item.recipe.calories}\n            image={item.recipe.image}\n            ingredients={item.recipe.ingredients}\n          />\n        ))}\n      </div>\n    );\n  }\n}\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}