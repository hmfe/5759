{"ast":null,"code":"var _jsxFileName = \"/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/inputForm.js\";\nimport React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\n\nclass InputForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const query = this.state.query;\n      localStorage.setItem(\"HistoryQuery\", query);\n    };\n\n    this.getSearch = event => {\n      event.preventDefault();\n      const query = this.state.query;\n      this.getHistory();\n      fetch(\"https://api.edamam.com/search?q=\".concat(query, \"&app_id=\").concat(process.env.App_ID, \" &app_key=\").concat(process.env.APP_KEY)).then(response => response.json()).then(data => this.setState({\n        recipeResult: data.hits,\n        query: \"\"\n      }));\n    };\n\n    this.state = {\n      query: \"\",\n      recipeResult: []\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /* componentWillMount() {\n    const { query } = this.state;\n    localStorage.getItem(\"HistoryQuery\") &&\n      this.setState({\n        query: localStorage.getItem(\"HistoryQuery\")\n      });\n    console.log(query);\n  }*/\n  getHistory() {\n    const data = localStorage.getItem(\"HistoryQuery\");\n    const query = this.state.query;\n    this.setState({\n      query: data\n    });\n    console.log(query);\n  }\n  /* componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"HistoryQuery\", JSON.stringify(nextState));\n    localStorage.setItem(\"HistoryDate\", Date.now());\n  }\n  componentDidMount() {\n    this.searchedQuery = JSON.parse(localStorage.getItem(\"HistoryQuery\"));\n    if (localStorage.getItem(\"HistoryQuery\")) {\n      this.setState({\n        query: this.searchedQuery.query\n      });\n    } else {\n      this.setState({\n        query: \"\"\n      });\n    }\n  }*/\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.getSearch,\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"query\",\n      value: this.state.query,\n      placeholder: \"Search ...\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.state.recipeResult.map(item => React.createElement(Recipe, {\n      key: item.recipe.uri,\n      title: item.recipe.label,\n      calories: item.recipe.calories,\n      image: item.recipe.image,\n      ingredients: item.recipe.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/tsedey.terefe/Code/React-projects/Soltia_AB/search-app/src/component/inputForm.js"],"names":["React","Component","Recipe","InputForm","constructor","onChange","event","setState","target","name","value","query","state","localStorage","setItem","getSearch","preventDefault","getHistory","fetch","process","env","App_ID","APP_KEY","then","response","json","data","recipeResult","hits","bind","getItem","console","log","render","map","item","recipe","uri","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\n\nclass InputForm extends Component {\n  searchedQuery;\n  constructor() {\n    super();\n\n    this.state = {\n      query: \"\",\n      recipeResult: []\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    const { query } = this.state;\n    localStorage.setItem(\"HistoryQuery\", query);\n  };\n  getSearch = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    this.getHistory();\n    fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${process.env.App_ID} &app_key=${process.env.APP_KEY}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          recipeResult: data.hits,\n          query: \"\"\n        })\n      );\n  };\n  /* componentWillMount() {\n    const { query } = this.state;\n    localStorage.getItem(\"HistoryQuery\") &&\n      this.setState({\n        query: localStorage.getItem(\"HistoryQuery\")\n      });\n    console.log(query);\n  }*/\n  getHistory() {\n    const data = localStorage.getItem(\"HistoryQuery\");\n    const { query } = this.state;\n\n    this.setState({\n      query: data\n    });\n    console.log(query);\n  }\n\n  /* componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"HistoryQuery\", JSON.stringify(nextState));\n    localStorage.setItem(\"HistoryDate\", Date.now());\n  }\n  componentDidMount() {\n    this.searchedQuery = JSON.parse(localStorage.getItem(\"HistoryQuery\"));\n    if (localStorage.getItem(\"HistoryQuery\")) {\n      this.setState({\n        query: this.searchedQuery.query\n      });\n    } else {\n      this.setState({\n        query: \"\"\n      });\n    }\n  }*/\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.getSearch} autoComplete=\"on\">\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={this.state.query}\n            placeholder=\"Search ...\"\n            onChange={this.onChange}\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <hr></hr>\n        {this.state.recipeResult.map(item => (\n          <Recipe\n            key={item.recipe.uri}\n            title={item.recipe.label}\n            calories={item.recipe.calories}\n            image={item.recipe.image}\n            ingredients={item.recipe.ingredients}\n          />\n        ))}\n      </div>\n    );\n  }\n}\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}